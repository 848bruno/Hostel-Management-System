version: '3.8'

services:
  redis:
    image: redis:8.0-alpine
    container_name: redis-cache
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "password"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000

      # NeonDB (cloud-hosted)
      - DATABASE_URL=postgresql://neondb_owner:npg_S6PJ5oidHNFx@ep-super-rain-a85j6ln8-pooler.eastus2.azure.neon.tech/neondb?sslmode=require

      # Redis
      - REDIS_URL=redis://:password@redis:6379
      - CACHE_TTL=60
      - CACHE_MAX=100

      # JWT
      - JWT_ACCESS_TOKEN_SECRET=your_access_secret
      - JWT_REFRESH_TOKEN_SECRET=your_refresh_secret
      - JWT_ACCESS_TOKEN_EXPIRATION_TIME=15m
      - JWT_REFRESH_TOKEN_EXPIRATION_TIME=7d

      # Throttle
      - THROTTLE_TTL=60
      - THROTTLE_LIMIT=10
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  redis-data:
    name: hostel-management-system-redis-data
    driver: local

networks:
  app-network:
    driver: bridge
